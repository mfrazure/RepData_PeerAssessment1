ymd("192012")
ymd("1920-1-2")
dtl
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment,hms(now()))
this_moment<- update(this_moment,hours=10, minutes=16,seconds+0)
this_moment<- update(this_moment,hours=10, minutes=16,seconds=0)
this_moment
nyc<- now(,tz="America/New_York")
?now
nyc<- now(tzone="America/New_York")
nyc
depart<- nyc + days(2)
depart
depart<- update(nyc, hours=17, minutes=34)
depart<- update(depart, hours=17, minutes=34)
depart
arrive<- depart + hours(15) + minutes(50)
?with_tz
arrive<- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time<- mdy("June 17, 2008", tzone = "Singapore")
last_time<- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long<- interval(last_time,arrive)
as.period(how_long)
stopwatch()
‹
Þ¯+8¯%·Ã¦ß'­|Ÿ¾K¿Ü?ª=Vûí_…¯ê÷T¼­x—ûÇúµË}ÂÂËGŠþ_†?i—Ûê×ÂËž*ýÓV9•/­?ÒÆ›
ls()
library(readr)
library(tidyr)
library(plyr)
library(dplyr)
acsURL<- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(acsURL,".\\data\\quizdata.csv",curl=TRUE)
quiz_acs<-read.csv(".\\data\quizdata.csv")
quiz_acs<-read.csv(".\\data\\quizdata.csv")
names(quiz_acs)
split_acs<- strsplit(quiz_acs,"wgtp")
split_acs<- strsplit(names(quiz_acs),"wgtp")
split_acs[123]
gdpURL<- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(gdpURL,".\\data\\quizgdp.csv",curl=TRUE)
quiz_gdp<- read.csv(".\\data\\quizgdp.csv")
names(quiz_gdp)
q_gdp<- tbl_df(quiz_gdp)
q_gdp
head(q_gdp)
head(quiz_gdp)
gdpURL<- "http://databank.worldbank.org/data/download/GDP.csv"
download.file(gdpURL,".\\data\\quizgdp.csv",curl=TRUE)
quiz_gdp<- read.csv(".\\data\\quizgdp.csv")
head(quiz_gdp)
tail(quiz_gdp)
tail(quiz_gdp,50)
q_gdp<- quiz_gdp[5:200,]
tail(q_gdp,10)
q_gdp<- quiz_gdp[5:220,]
tail(q_gdp,10)
head(q_gdp)
names(q_gdp)[5]
sub("X.3","GDP",names(q_gdp))
names(q_gdp)
names(q_gdp)<- sub("X.3","GDP",names(q_gdp))
names(q_gdp)
mean(q_gdp$GDP)
mean(q_gdp[,5])
my_gdp<- gsub(",","",q_gdp$GDP)
head(my_gdp)
mean(as.numeric(my_gdp))
mean(as.numeric(my_gdp),na.rm = TRUE)
my_gdp
my_gdp<-mygdp[1:200]
my_gdp<-my_gdp[1:200]
my_gdp
mg<-as.numeric(my_gdp)
mg
mean(mg)
mean(mg[1:189])
mean(mg[1:190])
tail(quiz_gdp)
q1_gdp<- quiz_gdp[5:329,5]
q1_gdp<- sub(",","",q1_gdp)
q1_gdp<-as.numeric(q1_gdp)
mean(q1_gdp)
?mean
mean(q1_gdp,na.rm=FALSE)
mean(q1_gdp,na.rm=TRUE)
q1_gdp
q1_gdp<- quiz_gdp[5:329,5]
q1_gdp
q1_gdp<-q1_gdp[1:232]
q1_gdp
q2_gdp<-sub(",","",q1_gdp)
q2_gdp
mean(q2_gdp,na.rm=FALSE)
mean(q2_gdp,na.rm=TRUE)
q3_gdp<-as.numeric(q2_gdp)
mean(q3_gdp,na.rm=TRUE)
mean(q3_gdp,na.rm=FALSE)
mean(q3_gdp[1;190])
mean(q3_gdp[1:190])
mean(q3_gdp[1:190],na.rm=TRUE)
q3_gdp
q2_gdp
q2_gdp<-gsub(",","",q1_gdp)
q2_gdp
q3_gdp<-as.numeric(q2_gdp)
q3_gdp
mean(q3_gdp,na.rm=TRUE)
mean(q3_gdp[1:190],na.rm=TRUE)
mean(q3_gdp[1:200],na.rm=TRUE)
gdpURL<- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(gdpURL,".\\data\\quizgdp.csv",curl=TRUE)
quiz_gdp<- read.csv(".\\data\\quizgdp.csv")
head(quiz_gdp)
gdpURL<-NULL
gdpURL<- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdpURL,".\\data\\newgdp.csv",curl=TRUE)
new_gdp<-read.csv(".\\data\\newgdp.csv")
head(new_gdp)
tail(new_gdp)
new_gdp[190:220]
new_gdp[190:220,]
quiz_gdp<-new_gdp[5:194,]
head(quiz_gdp)
tail(quiz_gdp)
q_gdp<-gsub(",","",quiz_gdp[,5])
head(q_gdp)
q_gdp<-as.numeric(q_gdp)
mean(q_gdp)
head(quiz_gdp)
names(quiz_gdp)<-sub("X.2","countryNames",names(quiz_gdp))
grep("United$",countryNames)
?grep
grep("United$",quiz_gdp$countryNames)
grep("^United",quiz_gdp$countryNames)
eduURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(eduURL,".\\data\\quizedu.csv",curl=TRUE)
quiz_edu<-read.csv(".\\data\\quizedu.csv")
head(quiz_edu)
names(quiz_edu)<-tolower(names(quiz_edu))
head(quiz_edu)
head(quiz_gdp)
names(quiz_gdp)<-sub("X","countrycode",names(quiz_gdp))
join(quiz_gdp,quiz_edu,by="countrycode")
new_df<-join(quiz_gdp,quiz_edu,by="countrycode")
head(new_df)
View(new_df)
June<- grep("end: June",new_df$special.notes)
June
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
names(sampleTimes)
head(sampleTimes)
quiz_time<-filter(sampleTimes,year=="2012")
quiz_time<-mutate(sampleTimes,sampleyear=year(sampleTimes[,1]))
year("2007-01-03")
quiz_time<-year(sampleTimes)
quiz_time
sum(quiz_time=="2012")
quiz_wday<-wday(sampleTimes)
quiz_wday
join_time<-cbind(quiz_time,quiz_wday)
head(join_time
)
sum(join_time, quiz_time=="2012" & quiz_wday == 2)
sum(join_time$quiz_time=="2012" & join_time$quiz_wday == 2)
sum(join_time[,1]=="2012" & join_time[,2] == 2)
q()
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,col="blue"
)
abline(h=12)
hist(ppm, col = "green")
rug(ppm)
hist(low, col = "green")
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v=12)
abline(v=12, lwd=2)
abline(v=median(ppm), col = "magenta", lwd=4)
names(pollution)
table(pollution$region)
reg<- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2,1), mar = c(4,4,2,1))
east <- subset(pollution, ppm, region = "east")
east <- subset(pollution, ppm, region == "east")
east <- subset(pollution, region == "east")
head(east)
hist(east$ppm, col = "green")
hist(east$ppm25, col = "green")
hist(east$pm25, col = "green")
west <- subset(pollution, region == "west")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(h=12, lwd = 2)
abline(h=12, lwd = 2, lty = 2))
abline(h=12, lwd = 2, lty = 2)
with(pollution, plot(latitude, pm25))
abline(h=12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12,lty=2,lwd=2)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1,2), mar = c(5,4,2,1))
west(pollution, region == "west")
west<- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
swirl()
?Devices
with(faithful, plot(eruptions, waiting))
main("Old FAithful GEyser data")
title(main = ("Old FAithful GEyser data"))
title(main = ("Old Faithful Geyser data"))
title(main = "Old Faithful Geyser data")
dev.out()
dev.cur()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
q()
sessionInfo()
getwd(
)
setwd("C:/Users/User/Documents/GitHub/RepData_PeerAssessment1")
ls()
ls()
dir()
zip.file.extract(activity.csv,zipname = "activity.zip", unzip = getOption(unzip))
steps <- read.table(unz("activity.zip","activity.csv"), header = TRUE, sep = ",")
head(steps)
table(steps$steps)
24*12
288*5
table(sampleSteps$interval)
table(steps$interval)
is.na(steps$steps)/nrow(steps)
sum(is.na(steps$steps))/nrow(steps)
?group_by
??group_by
library(dplyr)
daysteps <- steps %>%
group_by(date) %>%
summarize(date, sum(steps, na.rm = TRUE))
summarize(steps, sum(steps, na.rm = TRUE))
daysteps <- steps %>%
group_by(date) %>%
summarize(steps, sum(steps, na.rm = TRUE))
daysteps <- steps %>%
group_by(date) %>%
summarize(steps, sum(na.rm = TRUE))
daysteps <- steps %>%
group_by(date) %>%
summarize(sum(steps, na.rm = TRUE))
hist(daysteps)
head(daysteps)
hist(daysteps[,2])
names(daysteps)<- c(date,perday)
names(daysteps)<- c("date","perday")
hist(daysteps$perday)
?hist
abline(v = median(daysteps$perday), col = "red", lwd = 2)
abline(v = mean(daysteps$perday), col = "green", lwd = 2, lty = 2)
abline(v = mean(daysteps$perday), col = "green", lwd = 2, lty = 2, label = TRUE)
?abline
?print
byinterval <- steps %>%
group_by(interval)
byinterval <- steps %>%
group_by(interval) %>%
summarize(sum(steps, na.rm = TRUE))
byinterval <- steps %>%
group_by(interval) %>%
summarize(intervalsteps = sum(steps, na.rm = TRUE))
plot(byinternal$intervalsteps, byinterval$interval, type = "l")
plot(byinterval$intervalsteps, byinterval$interval, type = "l")
plot(byinterval$interval, byinterval$intervalsteps, type = "l")
max(byinterval$intervalsteps)
filter(byinterval, intervalsteps == 10927)
filter(byinterval, intervalsteps == max(intervalsteps))
head(byinterval)
steps$steps[which(is.na(steps))] <- byinterval$intervalsteps[match(steps$interval, byinterval$interval)]
steps$steps[which(is.na(steps))] <- byinterval$intervalsteps[match(byinterval$interval, steps$interval)]
head(steps)
sum(is.na(steps))
newsteps <- steps %>%
mutate(daytype = as.factor(weekdays(date)))
mutate(daytype = as.factor(weekdays(as.Date(as.character(date)))
)
mutate(daytype = as.factor(weekdays(date)))
mutate(daytype = as.factor(weekdays(date))
mutate(steps, daytype = as.factor(weekdays(date))
mutate(steps, daytype = as.factor(weekdays(date), abbreviate = False))
?weekdays
mutate(steps, daytype = as.factor(weekdays(as.Date(as.character(date), abbreviate = False))
)
)
mutate(steps, daytype = if{as.factor(weekdays(as.Date(as.character(date), abbreviate = False))
mutate(steps, daytype = if{as.factor(weekdays(as.Date(as.character(date), abbreviate = False))
mutate(steps, daytype = if{
head(steps)
steps <- mutate(steps, daytype = as.factor(weekdays(date), abbreviate = False))
steps <- mutate(steps, daytype = as.factor(weekdays(as.Date(as.character(date), abbreviate = False))))
head(steps)
steps <- mutate(steps, dayofweek = as.factor(weekdays(as.Date(as.character(date), abbreviate = False))))
head(steps)
weektype(c("Monday", "Tuesday","Wednesday","Thursday","Fridey","Saturday","Sunday"), c(rep("Weekday", 5), rep("weekend",2))
)
weektype<- df(c("Monday", "Tuesday","Wednesday","Thursday","Fridey","Saturday","Sunday"), c(rep("Weekday", 5), rep("weekend",2)))
weektype<- df(day = c("Monday", "Tuesday","Wednesday","Thursday","Fridey","Saturday","Sunday"), type = c(rep("Weekday", 5), rep("weekend",2)))
?df
weektype<- as.data.frame(c("Monday", "Tuesday","Wednesday","Thursday","Fridey","Saturday","Sunday"), c(rep("Weekday", 5), rep("weekend",2)))
weektype
weektype<- as.data.frame(days = c("Monday", "Tuesday","Wednesday","Thursday","Fridey","Saturday","Sunday"), type = c(rep("Weekday", 5), rep("weekend",2)))
?as.data.frame
days <- c("Monday", "Tuesday","Wednesday","Thursday","Fridey","Saturday","Sunday")
type <- c(rep("Weekday",5),rep("weekend",2))
days
type
weektype <- df(days,type)
weektype <- qas.data.frame(days,type)
weektype <- as.data.frame(days,type)
weektype
weektype <- data.frame(days,type)
weektype
typeSample <- mutate(steps, day = weekdays(`date))
typeSample <- mutate(steps, day = weekdays(date))
)
''
)
weektype
)))))))))))))))))
""
typeSample <- mutate(steps, day = weekdays(date))
typeSample <- mutate(steps, day = weekdays(as.Date(date))
)
head(typeSample)
typeSample$daytype[which(day)] <- weektype$type[match(weektype$days, typeSample$day)]
typeSample$daytype[day] <- weektype$type[match(weektype$days, typeSample$day)]
typeSample$daytype <- weektype$type[match(weektype$days, typeSample$day)]
typeSample$daytype[typeSample$day %in% c("Monday","Tuesday","Wednesday", "Thursday", "Friday")] <- "Weekday"
typeSample$daytype[typeSample$day == "Monday"] <- "Weekday"
head(typeSample)
??addNewData
install.packages(addNewData)
names(weektype)
names(typeSample)
days_weekend <- c("Saturday","Sunday")
days_weekday <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
typeSample <- select(typeSample, -c(daytype:dayofweek))
head(typeSample)
Calculate.weekday <- function(x) {}
Calculate.weekday <- function(x) {
if (x %in% days_weekend) {
return("Weekend")
} else if (x %in% days_weekday) {
return("weekday")
}
return(NA)
}
typeSample$daytype <- apply(typeSample, 1, function(x) Calculate.weekday(x['day']))
head(typeSample)
tail(typeSample)
table(typeSample$daytype)
library(ggplot2)
q<- qplot(interval,steps,data=typeSample,facets = daytype ~ .)
print(q)
q<- qplot(interval,log10(steps),data=typeSample,facets = daytype ~ .)
print(q)
typeavg <- typeSample %>%
group_by(daytype) %>%
typeavg <- typeSample %>%
group_by(daytype,interval) %>%
summarize(mean(steps))
q<- qplot(interval,"mean(steps)",data=typeavg,facets = daytype ~ .)
print(q)
head(typeavg)
typeavg <- typeSample %>%
group_by(daytype,interval) %>%
summarize(stepmean=mean(steps))
q<- qplot(interval,stepmean,data=typeavg,facets = daytype ~ ., type = "l")
q
View(typeavg)
dim(typeSample)
group_by(daytype,interval) %>%
typeavg <- typeSample %>%
group_by(daytype,interval) %>%
summarize(stepmean=mean(steps))
head(typeavg)
head(typeSample)
typeavg <- typeSample %>%
group_by(daytype,interval) %>%
summarize(asteps=sum(steps),acount=n(steps))
typeavg <- typeSample %>%
group_by(daytype,interval) %>%
summarize(asteps=sum(steps),acount=nrow(steps))
typeavg <- typeSample %>%
group_by(daytype,interval) %>%
summarize(asteps=sum(steps),acount=nrow())
typeavg <- typeSample %>%
summarize(asteps=sum(steps), acount = n_distinct(daytype,interval))
typeavg <- typeSample %>%
group_by(daytype,interval) %>%
summarize(asteps=sum(steps), acount = n_distinct(daytype,interval))
head(typeavg)
summarize(asteps=sum(steps), acount = n())
typeavg <- typeSample %>%
group_by(daytype,interval) %>%
summarize(asteps=sum(steps), acount = n())
head(typeavg)
mutate(typeavg, avg = asteps/acount)
dim(typeavg)
dim(typeSample)
test<- group_by(typeSample,interval)
head(test)
dim(test)
testsum<- summarize(test, sum(steps))
head(testsum)
dim(testsum)
testmean<- summarize(test, mean(steps))
head(testmean)
testnum<- summarize(test, n())
head(testnum)
dim(sampleSteps)
names(testSample)
dim(typesample)
dim(typeSample)
names(typeSample)
weekdaySample<- typeSample %>%
filter(daytype == "Weekday")
weekdaySample<- typeSample %>%
filter(daytype == "Weekday") %>%
group_by(interval) %>%
summarize(avg = mean(steps))
head(weekdaySample)
weekdaySample<- typeSample %>%
filter(daytype == "Weekday") %>%
weekdaySample<- typeSample %>%
filter(daytype == "Weekday")
weekdaySample<- typeSample %>%
filter(daytype == "weekday")
weekdaySample<- typeSample %>%
filter(daytype == "weekday") %>%
group_by(interval) %>%
summarize(avg = mean(steps))
head(weekdaySample)
weekendSample<- typeSample %>%
filter(daytype == "weekend") %>%
group_by(interval) %>%
summarize(avg = mean(steps))
head(weekendSample)
weekendSample<- typeSample %>%
filter(daytype == "Weekend") %>%
group_by(interval) %>%
summarize(avg = mean(steps))
head(weekendSample)
weekendSample<- typeSample %>%
filter(daytype == "Weekend") %>%
group_by(interval) %>%
summarize(sum = sum(steps))
head(weekendSample)
test <- filter(typeSample,interval == 0)
View(test)
8*91
728+47+34+10
819/61
182/16
819-182
637/45
source(PA_1_template.Rmd)
getwd()
source(PA1_template.Rmd)
source(PA1_template.Rmd)
dir()
source("PA1_template.Rmd")
?knit2html
knit2html("PA1_template.Rmd")
library(knitr)
knit2html("PA1_template.Rmd")
